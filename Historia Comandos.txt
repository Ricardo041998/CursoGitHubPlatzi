Este es mi primer commit en GitHub y tengo 22 años 

Comandos Trabajados 

git config -l (Para ver la configuración de git hub)
git config --global user.email "correo"(para definir el correo)
git init 
git show 
git commit -m "Comentario"
git log
git status 
git diff 
git add . o "nombre archivo "
git commit -am "comentario"----> Para archivos que ya he agregado anterior mente
<<<<<<< HEAD
git log --stat ---> Para ver el detalle de lo que se Cambio en especifico
=======
git log --stat ---> Para ver el detalle de lo que se Cambio en especifico
git branch "nombre rama"
>>>>>>> cabecera

git hub merge "Nombre de Rama " tener en cuenta la direccion en que se hace 

git remote add origin https://github.com/Ricardo041998/CursoGitHubPlatzi.git
git remote 
git remote -v (Para ver el detalle verbal )
git push origin master (Para enviar al repositorio anterior mente agregado)
git pull origin master (Para traer primero el reposiorio remoto y poder unir el local
git pull origin master  --allow-unrelated-histories (Para forzar la union de las ramas )

-------------------
ssh-keygen -t rsa -b 4096 -C "sanchezduvan041998@gmail.com" crea la llave y la complejidad 
eval $(ssh-agent -s) (Evalua que el agente este hailitado )
ssh-add ~/.ssh/id_rsa (agrega la llave creada privada al entorno )

git remote set-url origin git@github.com:Ricardo041998/CursoGitHubPlatzi.git "llave ssh del repositorio" (Para cambia al modo de conexión ssh)
alias  arbolito ="git log --all --graph --decorate --oneline" (Crea un alias aun comando para hacer las cosas mas facil en la consola )
git log --all --graph --decorate --oneline (Detalla de forma organizada todo el historial de los commits)
git tag -a v0.2 -m "Resultado de la s mprimeras clases del curso" 909d3d7 Forma de agrgar tags
git tag 
git show-ref --tags (Para ver el detalle de tags)
git push origin --tags (Para enviar los tags )
git tag -d "nombre de tag" para borrar
git push origin :refs/tags/v0.1 ("Para borrar la referencia tambien en la web ")

----------------Comandos adicionales para rams-----
git show-branch --all
gitk (Abre un apicativo para ver los cambios de manera grafica)




